<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.0.xsd">

  <context:component-scan base-package="com.pivotal.gfxd.demo" />

  <bean id="propConfig" lazy-init="false"
    class="org.apache.commons.configuration.PropertiesConfiguration">
    <constructor-arg type="java.io.File" value="#{systemProperties['configFile']}" />
    <property name="reloadingStrategy" ref="reloadingStrategy" />
  </bean>

  <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" depends-on="propConfig">
    <property name="corePoolSize" value="#{propConfig.getString('thread.poolMinSize')}" />
    <property name="maxPoolSize"  value="#{propConfig.getString('thread.poolMaxSize')}" />
    <property name="queueCapacity" value="#{propConfig.getString('thread.queueSize')}" />
    <property name="rejectedExecutionHandler" value="#{new java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy()}" />
    <property name="WaitForTasksToCompleteOnShutdown" value="true" />
  </bean>

  <bean id="reloadingStrategy"
    class="org.apache.commons.configuration.reloading.FileChangedReloadingStrategy" />

  <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
    <property name="maximumPoolSize" value="10" />
    <property name="minimumPoolSize" value="5" />
    <property name="connectionTimeout" value="10000" />
    <property name="dataSourceClassName"
      value="com.pivotal.gemfirexd.internal.jdbc.ClientDataSource" />
    <property name="dataSourceProperties" ref="dbProps" />
    <property name="poolName" value="springHikariCP" />
    <property name="connectionInitSql" value="call syscs_util.set_statement_statistics(1);" />
  </bean>

  <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
    <constructor-arg ref="hikariConfig" />
  </bean>

  <!--
      This doesn't work with wildcard classpaths:
          <util:properties id="dbProps" location="classpath:db.properties"/>
      The wildcard CP is necessary because this jar gets pulled into the web
      module and needs to pull this prop file out of the embedded loader jar.
  -->
  <bean id="dbProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="locations" value="classpath*:db.properties" />
  </bean>

</beans>
